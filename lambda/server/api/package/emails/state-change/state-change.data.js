const packageItems = [{
  id: 9,
  name: 'Hello Box',
  quantity: 2,
  price_amount: 200,
  total_amount: 400,
  object: 'https://staging-cdn.shoppre.com/shoppre/2018/6/8a854b15-7cc5-4553-b8ae-a6fd49fe89ee.png',
  package_item_category_id: 18,
  PackageItemCategory: {
    name: 'Good Category',
  },
  package_id: '10',
  status: 'pending',
  url: 'https://staging-cdn.shoppre.com',
  created_by: 1,
}];

const paymentGateway = {
  name: 'wire',
};

const OPS = {
  id: 1,
  first_name: 'Saneel',
  last_name: 'E S',
  email: 'support@shoppre.com',
};

const pkg = {
  id: 1,
  invoice_code: 'AMZ123',
  weight: '2',
  Store: {
    name: 'Amazon.in',
  },
  created_at: '19-07-2018',
  updated_at: '19-07-2018',
  price_amount: '250',
  sub_total: '500',
  total_quantity: '2',
  order_code: 'PS7658',
  buy_if_price_changed: '100 below',
};

const customer = {
  id: 646,
  name: 'Mr. Abhinav Mishra',
  first_name: 'Abhinav',
  virtual_address_code: 'SHPR12-182',
  email: 'tech.shoppre@shoppre.com',
  phone: 9071032646,
};

const ENV = {
  PREFIX: 'http://',
  DOMAIN: 'shoppre.test',
  URLS_PARCEL: 'http://parcel.shoppre.test',
  URLS_WWW: 'http://www.shoppre.test',
  URLS_MYACCOUNT: 'http://myaccount.shoppre.test',
};

module.exports = {
  PACKAGE_ITEMS_UPLOAD_PENDING: {
    PACKAGE_ITEMS_UPLOAD_PENDING: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    paymentGateway: {},
    subject: 'Your Package Has Just Arrived at Our Facility!',
    otp: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlY2guc2hvcHByZUBnbWFpbC5jb20iLCJpYXQiOjE1NTEyODM1MzR9.Ywy0Dm8NWDP6HlO4f7tTzfLN1p_7iFrDKWCJcDeOqHk',
  },
  CUSTOMER_INPUT: {
    CUSTOMER_INPUT: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Please Input the Product Costs of Your Purchase',
  },
  READY_TO_SHIP: {
    otp: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InB1bml0aC5oczkwQGdtYWlsLmNvbSIsImlhdCI6MTU1MTMzMTc2OX0.Dwf-UrtOIK95Nu2REt6Yky9r0bmNRKH6gC19aQKpcSg',
    READY_TO_SHIP: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Package Is Ready to be Shipped | Package ID: ${pkg.id}`,
  },
  DAMAGED: {
    otp: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InB1bml0aC5oczkwQGdtYWlsLmNvbSIsImlhdCI6MTU1MTMzMTc2OX0.Dwf-UrtOIK95Nu2REt6Yky9r0bmNRKH6gC19aQKpcSg',
    DAMAGED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Seems Your Item Had Arrived Here With a Damage!',
  },
  RETURN_REQUEST_FROM_CUSTOMER: {
    otp: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InB1bml0aC5oczkwQGdtYWlsLmNvbSIsImlhdCI6MTU1MTMzMTc2OX0.Dwf-UrtOIK95Nu2REt6Yky9r0bmNRKH6gC19aQKpcSg',
    RETURN_REQUEST_FROM_CUSTOMER: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Request to Return the Package ID: ${pkg.id} Has Been Received`,
  },
  RETURN_PICKUP_DONE: {
    RETURN_PICKUP_DONE: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Return Request | Your Package ID: ${pkg.id}Has Been Dispatched `,
  },
  UPLOAD_INVOICE_REQUESTED: {
    UPLOAD_INVOICE_REQUESTED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Please Upload the Invoice of Your Purchase',
  },
  SPLIT_PACKAGE: {
    SPLIT_PACKAGE: true,
    nextStateName: 'SPLIT_PACKAGE',
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Request to Split Your Package Has Been Received',
  },
  SPLIT_PACKAGE_PROCESSED: {
    SPLIT_PACKAGE_PROCESSED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Package ID: ${pkg.id} has successfully been split!`,
  },
  DISCARDED: {
    DISCARDED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Package ID: ${pkg.id} Has Successfully Been Discarded!`,
  },
  DISCARD_REQUESTED: {
    DISCARD_REQUESTED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Request to Discard the Package ID: ${pkg.id} Has Been Received`,
  },
  STANDARD_PHOTO_REQUEST: {
    STANDARD_PHOTO_REQUEST: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Customer Has Requested Standard Photos',
  },
  ADVANCED_PHOTO_REQUEST: {
    ADVANCED_PHOTO_REQUEST: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Customer Has Requested Advanced Photos',
  },
  PS_RETURN_REQUESTED: {
    PS_RETURN_REQUESTED: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: '',
  },
  PS_REFUND_RECIEVED: {
    PS_REFUND_RECIEVED: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: '',
  },
  PAYMENT_COMPLETED: {
    PAYMENT_COMPLETED: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    ORDER_ITEMS: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `You have Chosen to Pay via ${paymentGateway.name} |Order ${pkg.order_code} Created`,
    paymentGateway,
  },
  ORDER_CANCELLED: {
    ORDER_CANCELLED: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Your Order ${pkg.order_code} Has Been Cancelled`,
  },
  PRICE_CHANGED: {
    PRICE_CHANGED: true,
    PERSONAL_SHOPPER: true,
    ORDER_ITEMS: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Item(s) Have changed Price',
  },
  PAYMENT_FAILED: {
    PAYMENT_FAILED: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `Transaction Attempt Failed: Using your ${paymentGateway.name} | ORDER ID: ${pkg.order_code}`,
    paymentGateway,
  },
  PAYMENT_CONFIRMED: {
    PAYMENT_CONFIRMED: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `We Have Received Your Payment on Order ${pkg.order_code}`,
    paymentGateway,
  },
  ORDER_PLACED: {
    ORDER_PLACED: true,
    PERSONAL_SHOPPER: true,
    ORDER_ITEMS: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'We Have Successfully Placed Your Order',
  },
  OUT_OF_STOCK: {
    OUT_OF_STOCK: true,
    PERSONAL_SHOPPER: true,
    ORDER_ITEMS: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: 'Item(s) Have Went Out of Stock',
  },
  REFUNDED_TO_WALLET: {
    REFUNDED_TO_WALLET: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `We've Finished Refunding Your Payment for the Order ${pkg.order_code}`,
  },
  REFUNDED_TO_BANK_ACCOUNT: {
    REFUNDED_TO_BANK_ACCOUNT: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `We've Finished Refunding Your Payment for the Order ${pkg.order_code}`,
  },
  AWAITING_PACKAGE: {
    AWAITING_PACKAGE: true,
    PERSONAL_SHOPPER: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: '',
  },
  ORDER_COMPLETED: {
    ORDER_COMPLETED: true,
    PERSONAL_SHOPPER: true,
    COD: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    packageItems,
    subject: `All Items on Your Order ${pkg.order_code} Have Arrived`,
  },
  PACKAGE_STORAGE: {
    PACKAGE_STORAGE: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    subject: 'FREE storage is about to expire! Request to Ship soon!',
    packageStorageLimit: 20,
    packageStorageExceededCharge: 100,
    packageItems,
  },
  PACKAGE_STORAGE_EXCEEDED: {
    PACKAGE_STORAGE_EXCEEDED: true,
    INCOMING: true,
    pkg,
    customer,
    actingUser: OPS,
    ENV,
    subject: 'FREE storage has expired! Request to ship immediately!',
    packageStorageLimit: 20,
    packageStorageExceededCharge: 100,
    paymentGateway,
    packageItems,
  },
};
